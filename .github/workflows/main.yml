name: Build Python Package
on:
  workflow_dispatch:

permissions:
  checks: write
  contents: read
  packages: read
env:
  API_URL: https://app.veribom.com

jobs:
  create_scan_in_IR_Portal:
    runs-on: ubuntu-latest
    outputs:
      scan_id: ${{ steps.parseResponse.outputs.scan_id }}
    steps:
      - name: Initiating SBOM Scan (Repo 1)
        id: createScan
        uses: fjogeleit/http-request-action@v1.15.1
        with:
          url: '${{env.API_URL}}/utilityapi/v1/scan'
          method: 'POST'
          data: '{"api_key": "${{secrets.VB_API_KEY}}"}'
      - name: Parse Response
        id: parseResponse
        run: echo "scan_id=$(jq -r '.data.scan_id' <<< '${{ steps.createScan.outputs.response }}')" >> "$GITHUB_OUTPUT"

  create_scan_in_IR_Portal_Repo2:
    runs-on: ubuntu-latest
    outputs:
      scan_id: ${{ steps.parseResponse.outputs.scan_id }}
    steps:
      - name: Initiating SBOM Scan (Repo 2)
        id: createScan
        uses: fjogeleit/http-request-action@v1.15.1
        with:
          url: '${{env.API_URL}}/utilityapi/v1/scan'
          method: 'POST'
          data: '{"api_key": "${{secrets.VB_API_KEY_P}}"}'
      - name: Parse Response
        id: parseResponse
        run: echo "scan_id=$(jq -r '.data.scan_id' <<< '${{ steps.createScan.outputs.response }}')" >> "$GITHUB_OUTPUT"

  start_proxy_and_build:
    runs-on: ubuntu-latest
    needs: [create_scan_in_IR_Portal, create_scan_in_IR_Portal_Repo2]
    strategy:
      matrix:
        repo: [Repo1, Repo2]
    services:
      pse:
        image: 282904853176.dkr.ecr.us-west-2.amazonaws.com/invisirisk/pse-proxy:dev-test
        credentials:
          username: ${{ secrets.VB_ECR_USERNAME }}
          password: ${{ secrets.VB_ECR_TOKEN }}
        env:
          PSE_DEBUG_FLAG: --alsologtostderr
          POLICY_LOG: t
          INVISIRISK_JWT_TOKEN: ${{ secrets.VB_API_KEY }}
          INVISIRISK_PORTAL: https://app.veribom.com/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
    container:
      image: python:3.12-slim
      options: --cap-add=NET_ADMIN --privileged
    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y curl python3-pip jq
          pip install --ignore-installed -r requirements.txt || true
      
      - name: Checkout Code (Dynamic Repo)
        uses: actions/checkout@v3
        with:
          repository: "your-org/${{ matrix.repo }}"
          ref: main
          
      - name: Set SCAN_ID for Repo 1
        if: matrix.repo == 'Repo1'
        run: echo "SCAN_ID=${{ needs.create_scan_in_IR_Portal.outputs.scan_id }}" >> $GITHUB_ENV

      - name: Set SCAN_ID for Repo 2
        if: matrix.repo == 'Repo2'
        run: echo "SCAN_ID=${{ needs.create_scan_in_IR_Portal_Repo2.outputs.scan_id }}" >> $GITHUB_ENV

      - name: Run security scan
        uses: invisirisk/pse-action@v1.0.8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          SCAN_ID: ${{ env.SCAN_ID }}

      - name: Final Confirmation
        run: echo "Both repos ran successfully with respective API keys!"
